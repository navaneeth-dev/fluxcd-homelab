// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface ClusterKubeconfigClientConfiguration {
    /**
     * The client CA certificate
     */
    caCertificate: pulumi.Input<string>;
    /**
     * The client certificate
     */
    clientCertificate: pulumi.Input<string>;
    /**
     * The client key
     */
    clientKey: pulumi.Input<string>;
}

export interface ClusterKubeconfigKubernetesClientConfiguration {
    /**
     * The kubernetes CA certificate
     */
    caCertificate?: pulumi.Input<string>;
    /**
     * The kubernetes client certificate
     */
    clientCertificate?: pulumi.Input<string>;
    /**
     * The kubernetes client key
     */
    clientKey?: pulumi.Input<string>;
    /**
     * The kubernetes host
     */
    host?: pulumi.Input<string>;
}

export interface ClusterKubeconfigTimeouts {
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    create?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    update?: pulumi.Input<string>;
}

export interface GetClientConfigurationClientConfiguration {
    /**
     * The client CA certificate
     */
    caCertificate: string;
    /**
     * The client certificate
     */
    clientCertificate: string;
    /**
     * The client key
     */
    clientKey: string;
}

export interface GetClientConfigurationClientConfigurationArgs {
    /**
     * The client CA certificate
     */
    caCertificate: pulumi.Input<string>;
    /**
     * The client certificate
     */
    clientCertificate: pulumi.Input<string>;
    /**
     * The client key
     */
    clientKey: pulumi.Input<string>;
}

export interface GetClusterHealthClientConfiguration {
    /**
     * The client CA certificate
     */
    caCertificate: string;
    /**
     * The client certificate
     */
    clientCertificate: string;
    /**
     * The client key
     */
    clientKey: string;
}

export interface GetClusterHealthClientConfigurationArgs {
    /**
     * The client CA certificate
     */
    caCertificate: pulumi.Input<string>;
    /**
     * The client certificate
     */
    clientCertificate: pulumi.Input<string>;
    /**
     * The client key
     */
    clientKey: pulumi.Input<string>;
}

export interface GetClusterHealthTimeouts {
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
     */
    read?: string;
}

export interface GetClusterHealthTimeoutsArgs {
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
     */
    read?: pulumi.Input<string>;
}

export interface GetClusterKubeconfigClientConfiguration {
    /**
     * The client CA certificate
     */
    caCertificate: string;
    /**
     * The client certificate
     */
    clientCertificate: string;
    /**
     * The client key
     */
    clientKey: string;
}

export interface GetClusterKubeconfigClientConfigurationArgs {
    /**
     * The client CA certificate
     */
    caCertificate: pulumi.Input<string>;
    /**
     * The client certificate
     */
    clientCertificate: pulumi.Input<string>;
    /**
     * The client key
     */
    clientKey: pulumi.Input<string>;
}

export interface GetClusterKubeconfigTimeouts {
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
     */
    read?: string;
}

export interface GetClusterKubeconfigTimeoutsArgs {
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
     */
    read?: pulumi.Input<string>;
}

export interface GetImageFactoryExtensionsVersionsFilters {
    /**
     * The name of the extension to filter by.
     */
    names?: string[];
}

export interface GetImageFactoryExtensionsVersionsFiltersArgs {
    /**
     * The name of the extension to filter by.
     */
    names?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetImageFactoryOverlaysVersionsFilters {
    /**
     * The name of the overlay to filter by.
     */
    name?: string;
}

export interface GetImageFactoryOverlaysVersionsFiltersArgs {
    /**
     * The name of the overlay to filter by.
     */
    name?: pulumi.Input<string>;
}

export interface GetImageFactoryVersionsFilters {
    /**
     * If set to true, only stable versions will be returned. If set to false, all versions will be returned.
     */
    stableVersionsOnly?: boolean;
}

export interface GetImageFactoryVersionsFiltersArgs {
    /**
     * If set to true, only stable versions will be returned. If set to false, all versions will be returned.
     */
    stableVersionsOnly?: pulumi.Input<boolean>;
}

export interface GetMachineConfigurationMachineSecrets {
    /**
     * The certs for the talos kubernetes cluster
     */
    certs: inputs.GetMachineConfigurationMachineSecretsCerts;
    /**
     * The cluster secrets
     */
    cluster: inputs.GetMachineConfigurationMachineSecretsCluster;
    /**
     * The secrets for the talos kubernetes cluster
     */
    secrets: inputs.GetMachineConfigurationMachineSecretsSecrets;
    /**
     * The trustd info for the talos kubernetes cluster
     */
    trustdinfo: inputs.GetMachineConfigurationMachineSecretsTrustdinfo;
}

export interface GetMachineConfigurationMachineSecretsArgs {
    /**
     * The certs for the talos kubernetes cluster
     */
    certs: pulumi.Input<inputs.GetMachineConfigurationMachineSecretsCertsArgs>;
    /**
     * The cluster secrets
     */
    cluster: pulumi.Input<inputs.GetMachineConfigurationMachineSecretsClusterArgs>;
    /**
     * The secrets for the talos kubernetes cluster
     */
    secrets: pulumi.Input<inputs.GetMachineConfigurationMachineSecretsSecretsArgs>;
    /**
     * The trustd info for the talos kubernetes cluster
     */
    trustdinfo: pulumi.Input<inputs.GetMachineConfigurationMachineSecretsTrustdinfoArgs>;
}

export interface GetMachineConfigurationMachineSecretsCerts {
    /**
     * The certificate and key pair
     */
    etcd: inputs.GetMachineConfigurationMachineSecretsCertsEtcd;
    /**
     * The certificate and key pair
     */
    k8s: inputs.GetMachineConfigurationMachineSecretsCertsK8s;
    /**
     * The certificate and key pair
     */
    k8sAggregator: inputs.GetMachineConfigurationMachineSecretsCertsK8sAggregator;
    k8sServiceaccount: inputs.GetMachineConfigurationMachineSecretsCertsK8sServiceaccount;
    /**
     * The certificate and key pair
     */
    os: inputs.GetMachineConfigurationMachineSecretsCertsOs;
}

export interface GetMachineConfigurationMachineSecretsCertsArgs {
    /**
     * The certificate and key pair
     */
    etcd: pulumi.Input<inputs.GetMachineConfigurationMachineSecretsCertsEtcdArgs>;
    /**
     * The certificate and key pair
     */
    k8s: pulumi.Input<inputs.GetMachineConfigurationMachineSecretsCertsK8sArgs>;
    /**
     * The certificate and key pair
     */
    k8sAggregator: pulumi.Input<inputs.GetMachineConfigurationMachineSecretsCertsK8sAggregatorArgs>;
    k8sServiceaccount: pulumi.Input<inputs.GetMachineConfigurationMachineSecretsCertsK8sServiceaccountArgs>;
    /**
     * The certificate and key pair
     */
    os: pulumi.Input<inputs.GetMachineConfigurationMachineSecretsCertsOsArgs>;
}

export interface GetMachineConfigurationMachineSecretsCertsEtcd {
    /**
     * certificate data
     */
    cert: string;
    /**
     * key data
     */
    key: string;
}

export interface GetMachineConfigurationMachineSecretsCertsEtcdArgs {
    /**
     * certificate data
     */
    cert: pulumi.Input<string>;
    /**
     * key data
     */
    key: pulumi.Input<string>;
}

export interface GetMachineConfigurationMachineSecretsCertsK8s {
    /**
     * certificate data
     */
    cert: string;
    /**
     * key data
     */
    key: string;
}

export interface GetMachineConfigurationMachineSecretsCertsK8sArgs {
    /**
     * certificate data
     */
    cert: pulumi.Input<string>;
    /**
     * key data
     */
    key: pulumi.Input<string>;
}

export interface GetMachineConfigurationMachineSecretsCertsK8sAggregator {
    /**
     * certificate data
     */
    cert: string;
    /**
     * key data
     */
    key: string;
}

export interface GetMachineConfigurationMachineSecretsCertsK8sAggregatorArgs {
    /**
     * certificate data
     */
    cert: pulumi.Input<string>;
    /**
     * key data
     */
    key: pulumi.Input<string>;
}

export interface GetMachineConfigurationMachineSecretsCertsK8sServiceaccount {
    /**
     * The key for the k8s service account
     */
    key: string;
}

export interface GetMachineConfigurationMachineSecretsCertsK8sServiceaccountArgs {
    /**
     * The key for the k8s service account
     */
    key: pulumi.Input<string>;
}

export interface GetMachineConfigurationMachineSecretsCertsOs {
    /**
     * certificate data
     */
    cert: string;
    /**
     * key data
     */
    key: string;
}

export interface GetMachineConfigurationMachineSecretsCertsOsArgs {
    /**
     * certificate data
     */
    cert: pulumi.Input<string>;
    /**
     * key data
     */
    key: pulumi.Input<string>;
}

export interface GetMachineConfigurationMachineSecretsCluster {
    /**
     * The cluster id
     */
    id: string;
    /**
     * The cluster secret
     */
    secret: string;
}

export interface GetMachineConfigurationMachineSecretsClusterArgs {
    /**
     * The cluster id
     */
    id: pulumi.Input<string>;
    /**
     * The cluster secret
     */
    secret: pulumi.Input<string>;
}

export interface GetMachineConfigurationMachineSecretsSecrets {
    /**
     * The aescbc encryption secret for the talos kubernetes cluster
     */
    aescbcEncryptionSecret?: string;
    /**
     * The bootstrap token for the talos kubernetes cluster
     */
    bootstrapToken: string;
    /**
     * The secretbox encryption secret for the talos kubernetes cluster
     */
    secretboxEncryptionSecret: string;
}

export interface GetMachineConfigurationMachineSecretsSecretsArgs {
    /**
     * The aescbc encryption secret for the talos kubernetes cluster
     */
    aescbcEncryptionSecret?: pulumi.Input<string>;
    /**
     * The bootstrap token for the talos kubernetes cluster
     */
    bootstrapToken: pulumi.Input<string>;
    /**
     * The secretbox encryption secret for the talos kubernetes cluster
     */
    secretboxEncryptionSecret: pulumi.Input<string>;
}

export interface GetMachineConfigurationMachineSecretsTrustdinfo {
    /**
     * The trustd token for the talos kubernetes cluster
     */
    token: string;
}

export interface GetMachineConfigurationMachineSecretsTrustdinfoArgs {
    /**
     * The trustd token for the talos kubernetes cluster
     */
    token: pulumi.Input<string>;
}

export interface GetMachineDisksClientConfiguration {
    /**
     * The client CA certificate
     */
    caCertificate: string;
    /**
     * The client certificate
     */
    clientCertificate: string;
    /**
     * The client key
     */
    clientKey: string;
}

export interface GetMachineDisksClientConfigurationArgs {
    /**
     * The client CA certificate
     */
    caCertificate: pulumi.Input<string>;
    /**
     * The client certificate
     */
    clientCertificate: pulumi.Input<string>;
    /**
     * The client key
     */
    clientKey: pulumi.Input<string>;
}

export interface GetMachineDisksFilters {
    /**
     * Filter disks by bus path
     */
    busPath?: string;
    /**
     * Filter disks by modalias
     */
    modalias?: string;
    /**
     * Filter disks by model
     */
    model?: string;
    /**
     * Filter disks by name
     */
    name?: string;
    /**
     * Filter disks by serial number
     */
    serial?: string;
    /**
     * Filter disks by size
     */
    size?: string;
    /**
     * Filter disks by type
     */
    type?: string;
    /**
     * Filter disks by uuid
     */
    uuid?: string;
    /**
     * Filter disks by wwid
     */
    wwid?: string;
}

export interface GetMachineDisksFiltersArgs {
    /**
     * Filter disks by bus path
     */
    busPath?: pulumi.Input<string>;
    /**
     * Filter disks by modalias
     */
    modalias?: pulumi.Input<string>;
    /**
     * Filter disks by model
     */
    model?: pulumi.Input<string>;
    /**
     * Filter disks by name
     */
    name?: pulumi.Input<string>;
    /**
     * Filter disks by serial number
     */
    serial?: pulumi.Input<string>;
    /**
     * Filter disks by size
     */
    size?: pulumi.Input<string>;
    /**
     * Filter disks by type
     */
    type?: pulumi.Input<string>;
    /**
     * Filter disks by uuid
     */
    uuid?: pulumi.Input<string>;
    /**
     * Filter disks by wwid
     */
    wwid?: pulumi.Input<string>;
}

export interface GetMachineDisksTimeouts {
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
     */
    read?: string;
}

export interface GetMachineDisksTimeoutsArgs {
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
     */
    read?: pulumi.Input<string>;
}

export interface MachineBootstrapClientConfiguration {
    /**
     * The client CA certificate
     */
    caCertificate: pulumi.Input<string>;
    /**
     * The client certificate
     */
    clientCertificate: pulumi.Input<string>;
    /**
     * The client key
     */
    clientKey: pulumi.Input<string>;
}

export interface MachineBootstrapTimeouts {
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    create?: pulumi.Input<string>;
}

export interface MachineConfigurationApplyClientConfiguration {
    /**
     * The client CA certificate
     */
    caCertificate: pulumi.Input<string>;
    /**
     * The client certificate
     */
    clientCertificate: pulumi.Input<string>;
    /**
     * The client key
     */
    clientKey: pulumi.Input<string>;
}

export interface MachineConfigurationApplyOnDestroy {
    /**
     * Graceful indicates whether node should leave etcd before the upgrade, it also enforces etcd checks before leaving. Default true
     */
    graceful?: pulumi.Input<boolean>;
    /**
     * Reboot indicates whether node should reboot or halt after resetting. Default false
     */
    reboot?: pulumi.Input<boolean>;
    /**
     * Reset the machine to the initial state (STATE and EPHEMERAL will be wiped). Default false
     */
    reset?: pulumi.Input<boolean>;
}

export interface MachineConfigurationApplyTimeouts {
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    create?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
     */
    delete?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    update?: pulumi.Input<string>;
}

export interface MachineSecretsClientConfiguration {
    /**
     * The client CA certificate
     */
    caCertificate?: pulumi.Input<string>;
    /**
     * The client certificate
     */
    clientCertificate?: pulumi.Input<string>;
    /**
     * The client key
     */
    clientKey?: pulumi.Input<string>;
}

export interface MachineSecretsMachineSecrets {
    certs?: pulumi.Input<inputs.MachineSecretsMachineSecretsCerts>;
    /**
     * The cluster secrets
     */
    cluster?: pulumi.Input<inputs.MachineSecretsMachineSecretsCluster>;
    /**
     * kubernetes cluster secrets
     */
    secrets?: pulumi.Input<inputs.MachineSecretsMachineSecretsSecrets>;
    /**
     * trustd secrets
     */
    trustdinfo?: pulumi.Input<inputs.MachineSecretsMachineSecretsTrustdinfo>;
}

export interface MachineSecretsMachineSecretsCerts {
    /**
     * The certificate and key pair
     */
    etcd?: pulumi.Input<inputs.MachineSecretsMachineSecretsCertsEtcd>;
    /**
     * The certificate and key pair
     */
    k8s?: pulumi.Input<inputs.MachineSecretsMachineSecretsCertsK8s>;
    /**
     * The certificate and key pair
     */
    k8sAggregator?: pulumi.Input<inputs.MachineSecretsMachineSecretsCertsK8sAggregator>;
    /**
     * The service account secrets
     */
    k8sServiceaccount?: pulumi.Input<inputs.MachineSecretsMachineSecretsCertsK8sServiceaccount>;
    /**
     * The certificate and key pair
     */
    os?: pulumi.Input<inputs.MachineSecretsMachineSecretsCertsOs>;
}

export interface MachineSecretsMachineSecretsCertsEtcd {
    /**
     * certificate data
     */
    cert?: pulumi.Input<string>;
    /**
     * key data
     */
    key?: pulumi.Input<string>;
}

export interface MachineSecretsMachineSecretsCertsK8s {
    /**
     * certificate data
     */
    cert?: pulumi.Input<string>;
    /**
     * key data
     */
    key?: pulumi.Input<string>;
}

export interface MachineSecretsMachineSecretsCertsK8sAggregator {
    /**
     * certificate data
     */
    cert?: pulumi.Input<string>;
    /**
     * key data
     */
    key?: pulumi.Input<string>;
}

export interface MachineSecretsMachineSecretsCertsK8sServiceaccount {
    /**
     * The service account key
     */
    key?: pulumi.Input<string>;
}

export interface MachineSecretsMachineSecretsCertsOs {
    /**
     * certificate data
     */
    cert?: pulumi.Input<string>;
    /**
     * key data
     */
    key?: pulumi.Input<string>;
}

export interface MachineSecretsMachineSecretsCluster {
    /**
     * The cluster ID
     */
    id?: pulumi.Input<string>;
    /**
     * The cluster secret
     */
    secret?: pulumi.Input<string>;
}

export interface MachineSecretsMachineSecretsSecrets {
    /**
     * The AES-CBC encryption secret
     */
    aescbcEncryptionSecret?: pulumi.Input<string>;
    /**
     * The bootstrap token
     */
    bootstrapToken?: pulumi.Input<string>;
    /**
     * The secretbox encryption secret
     */
    secretboxEncryptionSecret?: pulumi.Input<string>;
}

export interface MachineSecretsMachineSecretsTrustdinfo {
    /**
     * The trustd token
     */
    token?: pulumi.Input<string>;
}
