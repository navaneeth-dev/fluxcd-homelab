// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class MachineBootstrap extends pulumi.CustomResource {
    /**
     * Get an existing MachineBootstrap resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MachineBootstrapState, opts?: pulumi.CustomResourceOptions): MachineBootstrap {
        return new MachineBootstrap(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'talos:index/machineBootstrap:MachineBootstrap';

    /**
     * Returns true if the given object is an instance of MachineBootstrap.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MachineBootstrap {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MachineBootstrap.__pulumiType;
    }

    /**
     * The client configuration data
     */
    public readonly clientConfiguration!: pulumi.Output<outputs.MachineBootstrapClientConfiguration>;
    /**
     * The endpoint of the machine to bootstrap
     */
    public readonly endpoint!: pulumi.Output<string>;
    /**
     * The name of the node to bootstrap
     */
    public readonly node!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.MachineBootstrapTimeouts | undefined>;

    /**
     * Create a MachineBootstrap resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MachineBootstrapArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MachineBootstrapArgs | MachineBootstrapState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MachineBootstrapState | undefined;
            resourceInputs["clientConfiguration"] = state ? state.clientConfiguration : undefined;
            resourceInputs["endpoint"] = state ? state.endpoint : undefined;
            resourceInputs["node"] = state ? state.node : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as MachineBootstrapArgs | undefined;
            if ((!args || args.clientConfiguration === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clientConfiguration'");
            }
            if ((!args || args.node === undefined) && !opts.urn) {
                throw new Error("Missing required property 'node'");
            }
            resourceInputs["clientConfiguration"] = args ? args.clientConfiguration : undefined;
            resourceInputs["endpoint"] = args ? args.endpoint : undefined;
            resourceInputs["node"] = args ? args.node : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MachineBootstrap.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering MachineBootstrap resources.
 */
export interface MachineBootstrapState {
    /**
     * The client configuration data
     */
    clientConfiguration?: pulumi.Input<inputs.MachineBootstrapClientConfiguration>;
    /**
     * The endpoint of the machine to bootstrap
     */
    endpoint?: pulumi.Input<string>;
    /**
     * The name of the node to bootstrap
     */
    node?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.MachineBootstrapTimeouts>;
}

/**
 * The set of arguments for constructing a MachineBootstrap resource.
 */
export interface MachineBootstrapArgs {
    /**
     * The client configuration data
     */
    clientConfiguration: pulumi.Input<inputs.MachineBootstrapClientConfiguration>;
    /**
     * The endpoint of the machine to bootstrap
     */
    endpoint?: pulumi.Input<string>;
    /**
     * The name of the node to bootstrap
     */
    node: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.MachineBootstrapTimeouts>;
}
