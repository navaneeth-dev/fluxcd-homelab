# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/refs/heads/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &name qbittorrent
  namespace: homelab
spec:
  interval: 1h
  chart:
    spec:
      chart: app-template
      version: 4.2.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s-helm-charts
        namespace: flux-system
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      *name:
        pod:
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            fsGroup: 1000
            fsGroupChangePolicy: OnRootMismatch
            seccompProfile: { type: RuntimeDefault }
        containers:
          app:
            image:
              repository: qbittorrentofficial/qbittorrent-nox
              tag: latest
            env:
              TZ: "${TZ}"
              QBT_DOWNLOADS_PATH: "/data"
              QBT_CONFIG_PATH: "/config"
              QBT_TORRENTING_PORT: "52525"
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 50m
                memory: 100Mi
              limits:
                memory: 500Mi
    service:
      app:
        primary: true
        controller: *name
        ports:
          http:
            port: 8080
      bittorrent-tcp:
        type: LoadBalancer
        controller: *name
        ipFamilyPolicy: SingleStack
        ipFamilies:
          - IPv6
        loadBalancerClass: "io.cilium/node"
        ports:
          tcp:
            enabled: true
            port: &bittorrent_port 52525
            protocol: TCP
#          udp:
#            enabled: true
#            protocol: UDP
#            port: *bittorrent_port

    persistence:
      config:
        enabled: true
        type: nfs
        server: "nas.home.arpa"
        path: "/srv/nfs4/config"
        globalMounts:
          - path: /config
      data:
        enabled: true
        type: nfs
        server: "nas.home.arpa"
        path: "/srv/nfs4/data"
        globalMounts:
          - path: /data
      tmpfs:
        type: emptyDir
        globalMounts:
          - path: /tmp
